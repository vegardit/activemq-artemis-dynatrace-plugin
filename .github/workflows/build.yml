# Copyright 2019-2021 by Vegard IT GmbH, Germany, https://vegardit.com
# SPDX-License-Identifier: Apache-2.0
#
# Author: Sebastian Thomschke, Vegard IT GmbH
#
# https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions
name: Build

on:
  push:
    branches:
    - '**'
    tags-ignore:
    - '**'
    paths:
    - '.github/workflows/build.yml'
    - '**/plugin.yaml'
  pull_request:
    paths:
    - '**/plugin.yaml'
  workflow_dispatch:
    # https://github.blog/changelog/2020-07-06-github-actions-manual-triggers-with-workflow_dispatch/

jobs:

  build:
    runs-on: ubuntu-latest
    steps:

    - name: Git Checkout
      uses: actions/checkout@v2 #https://github.com/actions/checkout

    - name: "Install: yq" # https://github.com/mikefarah/yq
      shell: bash
      run: |
        set -eux

        yq_version=$(curl -sSfL -o /dev/null -w "%{url_effective}\n" https://github.com/mikefarah/yq/releases/latest | grep -o '[^/]*$')
        yq_download_url="https://github.com/mikefarah/yq/releases/download/$yq_version/yq_linux_amd64"
        echo "Downloading [$yq_download_url]..."
        mkdir /tmp/yq
        curl -fsSL --retry 3 --retry-delay 5 -o /tmp/yq/yq "$yq_download_url"
        chmod 777 /tmp/yq/yq
        /tmp/yq/yq --version

        echo "/tmp/yq" >> $GITHUB_PATH

    - name: Validate YAML
      run: |
        for f in */plugin.yaml; do
          echo "Validating [$f]..."
          /tmp/yq/yq e $f>/dev/null
        done

    - name: Create plugin zip files
      if: github.ref == 'refs/heads/master'
      run: |
        set -eux

        rm -rf /tmp/custom
        mkdir /tmp/custom

        # use last commit time unix epoch value as minor version
        minor_version=$(git show -s --format=%ct)

        # suffix the version with the commit SHA
        yq -j e ".version |= sub(\"-SNAPSHOT\", \"\") + \".$minor_version\"" artemis-overview-plugin/plugin.yaml > /tmp/custom/plugin.json
        (cd /tmp && zip -r ./artemis-overview-plugin.zip ./custom/*)

        yq -j e ".version |= sub(\"-SNAPSHOT\", \"\") + \".$minor_version\"" artemis-queues-plugin/plugin.yaml > /tmp/custom/plugin.json
        (cd /tmp && zip -r ./artemis-queues-plugin.zip ./custom/*)

    - name: Delete "latest" Release
      if: github.ref == 'refs/heads/master'
      run: |
        set -eux

        creds="${{ secrets.GH_API_TOKEN }}:x-oauth-basic"
        api_base_url="$GITHUB_API_URL/repos/$GITHUB_REPOSITORY"

        # delete release
        latest_release_url="$api_base_url/releases/latest"
        if curl -u $creds -fsLo /dev/null --head "$latest_release_url"; then
           release_id=$(curl -u $creds -sL "$latest_release_url" | jq -r .id)
           curl -u $creds -fsSL -X DELETE "$api_base_url/releases/$release_id"
        fi

        # delete tag
        latest_tag_url="$api_base_url/git/refs/tags/latest"
        if curl -u $creds -fsLo /dev/null --head "$latest_tag_url"; then
           curl -u $creds -fsSL -u $creds -X DELETE "$latest_tag_url"
        fi

    - name: Create "latest" Release
      if: github.ref == 'refs/heads/master'
      id: create_release
      uses: actions/create-release@v1 # https://github.com/actions/upload-release-asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
      with:
        tag_name: "latest"
        release_name: "latest"
        draft: false
        prerelease: false

    - name: Attach artemis-overview-plugin-latest.zip
      if: github.ref == 'refs/heads/master'
      uses: actions/upload-release-asset@v1
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with: 
        upload_url: ${{ steps.create_release.outputs.upload_url}}
        asset_content_type: application/zip
        asset_name: artemis-overview-plugin-latest.zip
        asset_path: /tmp/artemis-overview-plugin.zip

    - name: Attach artemis-queues-plugin-latest.zip
      if: github.ref == 'refs/heads/master'
      uses: actions/upload-release-asset@v1
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with: 
        upload_url: ${{ steps.create_release.outputs.upload_url}}
        asset_content_type: application/zip
        asset_name: artemis-queues-plugin-latest.zip
        asset_path: /tmp/artemis-queues-plugin.zip
