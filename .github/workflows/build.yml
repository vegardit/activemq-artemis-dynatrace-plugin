# https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions
name: Build

on:
  push:
    paths:
    - '**/custom/plugin.json'
  pull_request:
    paths:
    - '**/custom/plugin.json'
  workflow_dispatch:
    # https://github.blog/changelog/2020-07-06-github-actions-manual-triggers-with-workflow_dispatch/

jobs:

  validate_json:
    runs-on: ubuntu-latest
    steps:
    - name: Git Checkout
      uses: actions/checkout@v2 #https://github.com/actions/checkout

    - name: Install jsonlint
      run: sudo apt-get --no-install-recommends install -y python-demjson

    - name: Validate json
      run: |
        set -e
        jsonlint-py -v */custom/plugin.json

  latest_release:
    runs-on: ubuntu-latest
    needs: validate_json
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Git Checkout
      uses: actions/checkout@v2 #https://github.com/actions/checkout

    - name: Print Bash Version
      run: bash --version

    - name: Delete "latest" Release
      run: |
        set -e

        creds="${{ secrets.GH_API_TOKEN }}:x-oauth-basic"
        api_base_url="$GITHUB_API_URL/repos/$GITHUB_REPOSITORY"

        # delete release
        latest_release_url="$api_base_url/releases/latest"
        if curl -u $creds -fsLo /dev/null --head "$latest_release_url"; then
           release_id=$(curl -u $creds -sL "$latest_release_url" | jq -r .id)
           curl -u $creds -fsSL -X DELETE "$api_base_url/releases/$release_id"
        fi

        # delete tag
        latest_tag_url="$api_base_url/git/refs/tags/latest"
        if curl -u $creds -fsLo /dev/null --head "$latest_tag_url"; then
           curl -u $creds -fsSL -u $creds -X DELETE "$latest_tag_url"
        fi

    - name: Create plugin zip files
      run: |
        set -e

        mkdir /tmp/custom

        # suffix the version with the commit SHA
        jq ".version = .version + \".$GITHUB_SHA\"" artemis-overview-plugin/custom/plugin.json > /tmp/custom/plugin.json
        (cd /tmp && zip -r ./artemis-overview-plugin.zip ./custom/*)

        jq ".version = .version + \".$GITHUB_SHA\"" artemis-queues-plugin/custom/plugin.json > /tmp/custom/plugin.json
        (cd /tmp && zip -r ./artemis-queues-plugin.zip ./custom/*)

    - name: Create "latest" Release
      id: create_release
      uses: actions/create-release@v1 # https://github.com/actions/upload-release-asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
      with:
        tag_name: "latest"
        release_name: "latest"
        draft: false
        prerelease: false

    - name: Attach artemis-overview-plugin-latest.zip
      uses: actions/upload-release-asset@v1
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with: 
        upload_url: ${{ steps.create_release.outputs.upload_url}}
        asset_content_type: application/zip
        asset_name: artemis-overview-plugin-latest.zip
        asset_path: /tmp/artemis-overview-plugin.zip

    - name: Attach artemis-queues-plugin-latest.zip
      uses: actions/upload-release-asset@v1
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with: 
        upload_url: ${{ steps.create_release.outputs.upload_url}}
        asset_content_type: application/zip
        asset_name: artemis-queues-plugin-latest.zip
        asset_path: /tmp/artemis-queues-plugin.zip
