version: '2.2'
name: custom.jmx.vegardit.ActiveMQ_Artemis_Queues
type: JMX
technologies: [ ACTIVE_MQ ]
entity: PROCESS_GROUP_INSTANCE
metricGroup: activemq.artemis.queues

configUI:
  displayName: ActiveMQ Artemis Queues

ui:
  charts:
  - {"group":"ActiveMQ Artemis Queues", "title":"Consumer Count",    "series": [{"key":"ConsumerCountByQueue",   "aggregation":"max", "displayname":"Consumer Count"}]}
  - {"group":"ActiveMQ Artemis Queues", "title":"Message Count",     "series": [{"key":"MessageCountByQueue",    "aggregation":"max", "displayname":"Message Count"}]}
  - {"group":"ActiveMQ Artemis Queues", "title":"Messages Expired",  "series": [{"key":"MessagesExpiredByQueue", "aggregation":"max", "displayname":"Message Expired"}]}
  - {"group":"ActiveMQ Artemis Queues", "title":"Messages Killed",   "series": [{"key":"MessagesKilledByQueue",  "aggregation":"max", "displayname":"Message Killed"}]}
  - {"group":"ActiveMQ Artemis Queues", "title":"Message Flow",      "series": [
      {"key":"MessagesAddedByQueue",            "aggregation":"sum", "displayname":"Messages Added"},
      {"key":"MessagesAcknowledgedByQueue",     "aggregation":"sum", "displayname":"Messages Acknowledged", "color":"#309060"}
    ]}
  - {"group":"ActiveMQ Artemis Queues", "title":"Message Flow Rate", "series": [
      {"key":"MessagesAddedRateByQueue",        "aggregation":"avg", "displayname":"Messages Added Rate (msg/s)"},
      {"key":"MessagesAcknowledgedRateByQueue", "aggregation":"avg", "displayname":"Messages Acknowledged Rate (msg/s)", "color":"#309060"}
    ]}

metrics:
- timeseries:
    key: ConsumerCountByQueue
    unit: Count
    displayname: Consumer Count by Queue
    dimensions: [ rx_pid, queue ]
  source: &source_defaults
    domain: org.apache.activemq.artemis
    keyProperties:
      broker: "*"
      component: addresses
      address: "*"
      subcomponent: queues
      routing-type: '"anycast"'
      queue: "*"
    attribute: ConsumerCount
    allowAdditionalKeys: true
    calculateDelta: false
    calculateRate: false
    aggregation: MAX
    splitting:
      name: queue
      type: keyProperty
      keyProperty: queue

- timeseries:
    key: MessageCountByQueue
    displayname: Message Count by Queue
    unit: Count
    dimensions: [ rx_pid, queue ]
  source:
    <<: *source_defaults
    attribute: MessageCount

- timeseries:
    key: MessagesAddedByQueue
    unit: Count
    displayname: Messages Added by Queue
    dimensions: [ rx_pid, queue ]
  source:
    <<: *source_defaults
    attribute: MessagesAdded
    calculateDelta: true

- timeseries:
    key: MessagesAddedRateByQueue
    unit: Count
    displayname: Messages Added Rate by Queue
    dimensions: [ rx_pid, queue ]
  source:
    <<: *source_defaults
    attribute: MessagesAdded
    calculateDelta: true
    calculateRate: true

- timeseries:
    key: MessagesAcknowledgedByQueue
    unit: Count
    displayname: Messages Acknowledged by Queue
    dimensions: [ rx_pid, queue ]
  source:
    <<: *source_defaults
    attribute: MessagesAcknowledged
    calculateDelta: true

- timeseries:
    key: MessagesAcknowledgedRateByQueue
    unit: Count
    displayname: Messages Acknowledged Rate by Queue
    dimensions: [ rx_pid, queue ]
  source:
    <<: *source_defaults
    attribute: MessagesAcknowledged
    calculateDelta: true
    calculateRate: true

- timeseries:
    key: MessagesExpiredByQueue
    displayname: Messages Expired by Queue
    unit: Count
    dimensions: [ rx_pid, queue ]
  source:
    <<: *source_defaults
    attribute: MessagesExpired
    calculateDelta: true

- timeseries:
    key: MessagesKilledByQueue
    displayname: Messages Killed by Queue
    unit: Count
    dimensions: [ rx_pid, queue ]
  source:
    <<: *source_defaults
    attribute: MessagesKilled
    calculateDelta: true
